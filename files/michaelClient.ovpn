##############################################
# Sample client-side OpenVPN 2.0 config file #
# for connecting to multi-client server.     #
#                                            #
# This configuration can be used by multiple #
# clients, however each client should have   #
# its own cert and key files.                #
#                                            #
# On Windows, you might want to rename this  #
# file so it has a .ovpn extension           #
##############################################

# Specify that we are a client and that we
# will be pulling certain config file directives
# from the server.
client

# Use the same setting as you are using on
# the server.
# On most systems, the VPN will not function
# unless you partially or fully disable
# the firewall for the TUN/TAP interface.
;dev tap
dev tun

# Windows needs the TAP-Win32 adapter name
# from the Network Connections panel
# if you have more than one.  On XP SP2,
# you may need to disable the firewall
# for the TAP adapter.
;dev-node MyTap

# Are we connecting to a TCP or
# UDP server?  Use the same setting as
# on the server.
;proto tcp
proto udp

# The hostname/IP and port of the server.
# You can have multiple remote entries
# to load balance between the servers.
remote 192.168.1.105 1194
;remote my-server-2 1194

# Choose a random host from the remote
# list for load-balancing.  Otherwise
# try hosts in the order specified.
;remote-random

# Keep trying indefinitely to resolve the
# host name of the OpenVPN server.  Very useful
# on machines which are not permanently connected
# to the internet such as laptops.
resolv-retry infinite

# Most clients don't need to bind to
# a specific local port number.
nobind

# Downgrade privileges after initialization (non-Windows only)
user nobody
group nogroup

# Try to preserve some state across restarts.
persist-key
persist-tun

# If you are connecting through an
# HTTP proxy to reach the actual OpenVPN
# server, put the proxy server/IP and
# port number here.  See the man page
# if your proxy server requires
# authentication.
;http-proxy-retry # retry on connection failures
;http-proxy [proxy server] [proxy port #]

# Wireless networks often produce a lot
# of duplicate packets.  Set this flag
# to silence duplicate packet warnings.
;mute-replay-warnings

# SSL/TLS parms.
# See the server config file for more
# description.  It's best to use
# a separate .crt/.key file pair
# for each client.  A single ca
# file can be used for all clients.
;ca ca.crt
;cert client.crt
;key client.key

# Verify server certificate by checking that the
# certicate has the correct key usage set.
# This is an important precaution to protect against
# a potential attack discussed here:
#  http://openvpn.net/howto.html#mitm
#
# To use this feature, you will need to generate
# your server certificates with the keyUsage set to
#   digitalSignature, keyEncipherment
# and the extendedKeyUsage to
#   serverAuth
# EasyRSA can do this for you.
remote-cert-tls server

# If a tls-auth key is used on the server
# then every client must also have the key.
;tls-auth ta.key 1

# Select a cryptographic cipher.
# If the cipher option is used on the server
# then you must also specify it here.
# Note that v2.4 client/server will automatically
# negotiate AES-256-GCM in TLS mode.
# See also the ncp-cipher option in the manpage
cipher AES-256-GCM
auth SHA256
key-direction `
# Enable compression on the VPN link.
# Don't enable this unless it is also
# enabled in the server config file.
#comp-lzo

# Set log file verbosity.
verb 3

# Silence repeating messages
;mute 20

; script-security 2
; up /etc/openvpn/update-resolv-conf
; down /etc/openvpn/update-resolv-conf

; script-security 2
; up /etc/openvpn/update-systemd-resolved
; down /etc/openvpn/update-systemd-resolved
; down-pre
; dhcp-option DOMAIN-ROUTE .
<ca>
-----BEGIN CERTIFICATE-----
MIICCzCCAZGgAwIBAgIUWZ+lU8wUGJrFgtLNiqxav4IMdt8wCgYIKoZIzj0EAwQw
GzEZMBcGA1UEAwwQY2VydGlmaWNhdGUgYXV0aDAeFw0yMTExMTgwMTIyMDRaFw0z
MTExMTYwMTIyMDRaMBsxGTAXBgNVBAMMEGNlcnRpZmljYXRlIGF1dGgwdjAQBgcq
hkjOPQIBBgUrgQQAIgNiAARzBO1BPWTo4yJrJk2mlBZPIWz+OOc8MvS+pOQoJwny
hvaVyM1SMXyHG9eMDDsGy8XTkHt2nwGcD+qG54VR7+cdNpjfymo6xLPHDqg0nXYJ
wxanrWIFWy9j+wkXG+ovNmmjgZUwgZIwHQYDVR0OBBYEFM/ZHwCIGO5MK8N37A3u
1zS2kEnpMFYGA1UdIwRPME2AFM/ZHwCIGO5MK8N37A3u1zS2kEnpoR+kHTAbMRkw
FwYDVQQDDBBjZXJ0aWZpY2F0ZSBhdXRoghRZn6VTzBQYmsWC0s2KrFq/ggx23zAM
BgNVHRMEBTADAQH/MAsGA1UdDwQEAwIBBjAKBggqhkjOPQQDBANoADBlAjEAkWpY
vA5RVOZxFb5/Zb7ICHdLg4SAphVTgYGVrjsBB4m40A5QIL3K5AKOe8DN4H1yAjAX
iV8fynfU9LTOuj9YWebJc7faUb+e1ZYvmhKpuWyymo+sL5uFvjUtRdyigl6l6Bo=
-----END CERTIFICATE-----
</ca>
<cert>
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            c4:f6:33:bf:28:c0:13:bb:a7:8d:58:aa:a8:02:1b:96
        Signature Algorithm: ecdsa-with-SHA512
        Issuer: CN=certificate auth
        Validity
            Not Before: Nov 18 23:14:12 2021 GMT
            Not After : Nov  2 23:14:12 2024 GMT
        Subject: CN=michaelClient
        Subject Public Key Info:
            Public Key Algorithm: id-ecPublicKey
                Public-Key: (384 bit)
                pub:
                    04:8c:b7:31:1e:36:8c:47:ff:ed:39:3b:a8:38:12:
                    31:a3:21:01:43:ec:68:4d:fe:86:2d:81:41:68:20:
                    6c:c9:e8:57:65:3e:af:08:d4:cf:b7:ee:c2:a8:bb:
                    ea:f3:34:67:04:df:ef:8c:0e:bc:98:58:97:de:63:
                    58:00:b1:b1:81:82:19:3d:ae:4b:ba:a1:45:97:59:
                    75:3b:07:56:a0:d6:45:1b:a0:ed:0a:77:17:26:3b:
                    c4:d0:9f:72:5d:dc:22
                ASN1 OID: secp384r1
                NIST CURVE: P-384
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:FALSE
            X509v3 Subject Key Identifier: 
                44:99:E9:EF:2A:30:7E:87:D4:1D:AA:6F:2E:A8:A8:DB:79:36:2A:68
            X509v3 Authority Key Identifier: 
                keyid:CF:D9:1F:00:88:18:EE:4C:2B:C3:77:EC:0D:EE:D7:34:B6:90:49:E9
                DirName:/CN=certificate auth
                serial:59:9F:A5:53:CC:14:18:9A:C5:82:D2:CD:8A:AC:5A:BF:82:0C:76:DF

            X509v3 Extended Key Usage: 
                TLS Web Client Authentication
            X509v3 Key Usage: 
                Digital Signature
    Signature Algorithm: ecdsa-with-SHA512
         30:66:02:31:00:d1:e9:ce:58:d3:19:4d:f1:20:02:bf:89:6e:
         5f:d0:9e:df:f9:3b:81:dd:ab:76:f7:bd:66:d8:10:b8:61:87:
         7f:83:6f:a9:0b:61:29:72:32:17:64:36:16:4c:10:60:60:02:
         31:00:e9:fb:77:7d:c2:b4:de:12:58:21:15:a3:52:06:6a:e9:
         62:15:b5:da:73:53:69:58:32:9e:b7:e8:dd:48:de:d5:de:d6:
         9e:62:f5:21:c4:86:bb:f0:4b:65:e8:76:7f:24
-----BEGIN CERTIFICATE-----
MIICGDCCAZ2gAwIBAgIRAMT2M78owBO7p41YqqgCG5YwCgYIKoZIzj0EAwQwGzEZ
MBcGA1UEAwwQY2VydGlmaWNhdGUgYXV0aDAeFw0yMTExMTgyMzE0MTJaFw0yNDEx
MDIyMzE0MTJaMBgxFjAUBgNVBAMMDW1pY2hhZWxDbGllbnQwdjAQBgcqhkjOPQIB
BgUrgQQAIgNiAASMtzEeNoxH/+05O6g4EjGjIQFD7GhN/oYtgUFoIGzJ6FdlPq8I
1M+37sKou+rzNGcE3++MDryYWJfeY1gAsbGBghk9rku6oUWXWXU7B1ag1kUboO0K
dxcmO8TQn3Jd3CKjgacwgaQwCQYDVR0TBAIwADAdBgNVHQ4EFgQURJnp7yowfofU
HapvLqio23k2KmgwVgYDVR0jBE8wTYAUz9kfAIgY7kwrw3fsDe7XNLaQSemhH6Qd
MBsxGTAXBgNVBAMMEGNlcnRpZmljYXRlIGF1dGiCFFmfpVPMFBiaxYLSzYqsWr+C
DHbfMBMGA1UdJQQMMAoGCCsGAQUFBwMCMAsGA1UdDwQEAwIHgDAKBggqhkjOPQQD
BANpADBmAjEA0enOWNMZTfEgAr+Jbl/Qnt/5O4Hdq3b3vWbYELhhh3+Db6kLYSly
MhdkNhZMEGBgAjEA6ft3fcK03hJYIRWjUgZq6WIVtdpzU2lYMp636N1I3tXe1p5i
9SHEhrvwS2Xodn8k
-----END CERTIFICATE-----
</cert>
<key>
</key>
<tls-crypt>
#
# 2048 bit OpenVPN static key
#
-----BEGIN OpenVPN Static key V1-----
7f8f6de8866683da5a2a5683b8e37f51
887b4e343dea8a14c81ea25f245741c0
ca676a8a2f1db5f404d4427cc8a3fce0
2129edcccb383a71656c37331896a86d
bafaab397f7230c06c1d58768d31bef5
97b59ec566573313ca9a8c0937ae7202
26247d5692e811fdbcd2861cd847be62
6fd91f136b37956c290803acb821f776
cf1daca8076d01609f9cec258d614e31
ac4e72fe3b746230a0c7cda6c0abd24b
d6805dc348f3841b145b5b2ca4fa9051
299d45aeb8bd3887693719a297382d33
3a4fd5ad3bb7f91a57dba1c71d494fdc
8d4eb437535b39530adf91ef932e61e3
c76e19ecd825cdaf19f098e915c40865
108c8381eafd53441186dc64df08914b
-----END OpenVPN Static key V1-----
</tls-crypt>
